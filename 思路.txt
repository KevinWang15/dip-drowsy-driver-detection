1. HAR脸部截取
2. 亮度（曝光）均一化
3. 眼睛单独作为输入

python face_landmark_detection.py A:\shape_predictor_68_face_landmarks.dat ./V02

https://github.com/AITTSMD/MTCNN-Tensorflow
https://github.com/jerryhouuu/Face-Yaw-Roll-Pitch-from-Pose-Estimation-using-OpenCV


http://file-cn.kevinwang.cc/dlib-19.13.zip

set BOOST_ROOT=D:\boost_1_62_0
set BOOST_LIBRARYDIR=D:\boost_1_62_0

A:\dlib-19.13\

mkdir build && cd build
cmake -Ddlib_DIR=A:\dlib-19.13\build\dlib -DWITH_TOOLS=TRUE ..
make

cmake -DJPEG_INCLUDE_DIR=..\dlib\external\libjpeg `
-DJPEG_LIBRARY=..\dlib\external\libjpeg `
-DPNG_PNG_INCLUDE_DIR=..\dlib\external\libpng `
-DPNG_LIBRARY_RELEASE=..\dlib\external\libpng `
-DZLIB_INCLUDE_DIR=..\dlib\external\zlib `
-DZLIB_LIBRARY_RELEASE=..\dlib\external\zlib `
-DCMAKE_INSTALL_PREFIX=install ..

Face landmark detection
SVM


使用到的工具：
dlib landmark
gazr



https://docs.opencv.org/2.4/modules/calib3d/doc/camera_calibration_and_3d_reconstruction.html#solvepnp
enum FACIAL_FEATURE {
    NOSE=30,
    RIGHT_EYE=36,
    LEFT_EYE=45,
    RIGHT_SIDE=0,
    LEFT_SIDE=16,
    EYEBROW_RIGHT=21,
    EYEBROW_LEFT=22,
    MOUTH_UP=51,
    MOUTH_DOWN=57,
    MOUTH_RIGHT=48,
    MOUTH_LEFT=54,
    SELLION=27,
    MOUTH_CENTER_TOP=62,
    MOUTH_CENTER_BOTTOM=66,
    MENTON=8
};


展示
1. 科大讯飞的展示
2. landmark 介绍
3. landmark 抽取
4. 根据landmark指标，训练模型做预测（SVM / LSTM）
5. 结果

展示： 科大讯飞动画、添加方向点后的动画


http://file-cn.kevinwang.cc/shuzituxiangchuli-Dataset.zip
../gazr_estimate_head_pose ../shape_predictor_68_face_landmarks.dat  ../fnames.txt
